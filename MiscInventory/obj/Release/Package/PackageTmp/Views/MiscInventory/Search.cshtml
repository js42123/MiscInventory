

@model MiscInventory.Models.InventorySearch

@{
  
    ViewBag.Title = "Search Inventory";
}
@using (Html.BeginForm("Search", "Inventory", null, FormMethod.Post))
{
    @Html.ValidationSummary(true)

    <h2><b>Search Options</b></h2>
    <fieldset id="Master">
        <legend id="MasterLegend"></legend>
        <div>
            <div class="search-input">
                <p>
                    @Html.LabelFor(model => model.BUD)
                    @Html.TextBoxFor(model => model.BUD)
                    @Html.ValidationMessageFor(model => model.BUD)</p>
             </div>
        </div>
        <div class="search-input">
            <p>
                @Html.LabelFor(model => model.INV_TYPE)
                @Html.DropDownListFor(model => model.INV_TYPE, new SelectList(ViewBag.INV_TYPE, "", "Text")) Select Inventory Type
             </p>
        </div>
         <div class="search-input">
            <p>
                @Html.LabelFor(model => model.LOC)
                @Html.TextBoxFor(model => model.LOC)
             </p>
        </div> <div class="search-input">
            <p>
                @Html.LabelFor(model => model.INV_DESC)
                @Html.TextBoxFor(model => model.INV_DESC)
             </p>
        </div>
        
     <div class="search-input">
            <p>
                @Html.LabelFor(model => model.VCHR_NO)
                @Html.TextBoxFor(model => model.VCHR_NO)
             </p>
        </div>
    <div class="search-input">
            <p>
                @Html.LabelFor(model => model.ID_R)
                @Html.TextBoxFor(model => model.ID_R)
             </p>
        </div>
        <fieldset>
            <legend id="radiobutton">Please select one</legend>
            <div class="search-input">
                <p>@Html.LabelFor( model => model.CONTAINS)
                   @Html.RadioButtonFor( model => model.CONTAINS, "Contains", new { id = "", div_contains = ViewData["contains"]})
                    @Html.LabelFor( model => model.BEGINSWITH)
                    @Html.RadioButtonFor( model => model.BEGINSWITH, "Begins With", new { id = "", div_contains = ViewData["beginswith"]})
                </p>
            </div>
        </fieldset>
        <div class="search-input">
            <p>>@Html.LabelFor(model => model.BEGIN_MONTH)
                @Html.DropDownListFor(model => model.BEGIN_MONTH, new SelectList(ViewBag.Begin, "Value", "Text"))
                 @Html.LabelFor(model => model.BEGIN_YEAR)
                 @Html.TextBoxFor(model => model.BEGIN_YEAR)</p>
            </div>
        <div class="search-input">
            <p>>@Html.LabelFor(model => model.END_MONTH)
                 @Html.DropDownListFor(model => model.END_MONTH, new SelectList(ViewBag.End, "Value", "Text"))
                 @Html.LabelFor(model => model.END_YEAR)
                 @Html.TextBoxFor(model => model.END_YEAR)</p>
        </div>
      

    </fieldset>
    <br />
    <div class="button">
         <button id="reset" type="reset" value="Reset">Reset</button>
        <input style="display: none;" id="submit" type="submit" value="Search" name="Search" />
        <input id="Search" type="submit" value="Search" name="Search" />
    </div>
}

<br />

<div id="SearchResults">
    @if (Model.SearchResults == null)
    {
        <p>
            <strong>NOTE:</strong>
            Be specific in your search. 
            The system will only search for what information you fill out, 
            otherwise it will pull all records fromt the database.
        </p>
    }
    else if (Model.SearchResults.Count > 0)
    {
          @Html.Partial("~/Views/MiscInventory/_InventoryList.cshtml", Model.SearchResults)<br />
    }
    else
    {
        <p>No inventory records meet your search.</p>
    }
    
        
</div>

    
